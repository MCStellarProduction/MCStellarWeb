button {
  --button_radius: 0.75em;
  --button_color: #e8e8e8;
  --button_outline_color: #000000;
  --hover_offset: 4px;
  --active_offset: 2px;
  --shadow_color: rgba(0, 0, 0, 0.5);
  --glitch_offset: 2px;

  font-size: 17px;
  font-weight: bold;
  border: none;
  width: 200px;
  border-radius: var(--button_radius);
  background: var(--button_outline_color);
  position: relative;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.23, 1, 0.32, 1);
  overflow: hidden;
}

.button_top {
  display: block;
  box-sizing: border-box;
  border: 5px solid var(--button_outline_color);
  border-radius: var(--button_radius);
  padding: 0.75em 1.5em;
  background: var(--button_color);
  color: var(--button_outline_color);
  transform: translateY(-0.2em);
  transition: transform 0.2s cubic-bezier(0.23, 1, 0.32, 1);
}

button:hover {
  box-shadow: var(--hover_offset) var(--hover_offset) 0 var(--shadow_color);
  transform: translate(
    calc(-1 * var(--hover_offset)),
    calc(-1 * var(--hover_offset))
  );
}

button:hover .button_top {
  transform: translateY(-0.33em);
}

button:active .button_top {
  transform: translateY(0);
}

button:active {
  box-shadow: var(--active_offset) var(--active_offset) 0 var(--shadow_color);
  transform: translate(
    calc(-1 * var(--active_offset)),
    calc(-1 * var(--active_offset))
  );
}

button:focus {
  outline: none;
  box-shadow: 0 0 0 2px var(--button_outline_color),
    inset 0 0 0 2px var(--button_color);
}

/* Brutalist hover effect */
button::before,
button::after {
  content: attr(data-content);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--button_color);
  color: var(--button_outline_color);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s cubic-bezier(0.23, 1, 0.32, 1);
  overflow: hidden;
  border-radius: var(--button_radius);
  opacity: 0;
}

/* Brutalist active effect */
button:active::before,
button:active::after {
  transform: none;
}

/* Additional brutalist flair */
@keyframes brutalistShake {
  0%,
  100% {
    transform: translateX(0) translateY(0);
  }
  25% {
    transform: translateX(-2px) translateY(-2px) rotate(-1deg);
  }
  75% {
    transform: translateX(2px) translateY(2px) rotate(1deg);
  }
}

button:hover {
  animation: brutalistShake 0.4s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}
label {
.checkbox-wrapper-51 input[type="checkbox"] {
  visibility: hidden;
  display: none;
}

.checkbox-wrapper-51 .toggle {
  position: relative;
  display: block;
  width: 42px;
  height: 24px;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  transform: translate3d(0, 0, 0);
}

.checkbox-wrapper-51 .toggle:before {
  content: "";
  position: relative;
  top: 1px;
  left: 1px;
  width: 40px;
  height: 22px;
  display: block;
  background: #c8ccd4;
  border-radius: 12px;
  transition: background 0.2s ease;
}

.checkbox-wrapper-51 .toggle span {
  position: absolute;
  top: 0;
  left: 0;
  width: 24px;
  height: 24px;
  display: block;
  background: #fff;
  border-radius: 50%;
  box-shadow: 0 2px 6px rgba(154,153,153,0.75);
  transition: all 0.2s ease;
}

.checkbox-wrapper-51 .toggle span svg {
  margin: 7px;
  fill: none;
}

.checkbox-wrapper-51 .toggle span svg path {
  stroke: #c8ccd4;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-dasharray: 24;
  stroke-dashoffset: 0;
  transition: all 0.5s linear;
}

.checkbox-wrapper-51 input[type="checkbox"]:checked + .toggle:before {
  background: #1175c7;
}

.checkbox-wrapper-51 input[type="checkbox"]:checked + .toggle span {
  transform: translateX(18px);
}

.checkbox-wrapper-51 input[type="checkbox"]:checked + .toggle span path {
  stroke: #000000;
  stroke-dasharray: 25;
  stroke-dashoffset: 25;
}
